package org.infinispan.protostream.impl;

import com.google.protobuf.CodedInputStream;
import com.google.protobuf.CodedOutputStream;
import com.google.protobuf.Descriptors;
import com.google.protobuf.ProtocolMessageEnum;
import org.infinispan.protostream.RawProtobufMarshaller;
import org.infinispan.protostream.SerializationContext;

import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

/**
 * Marshaller for Google's Protobuf enum classes generated by protoc tool.
 *
 * @author anistor@redhat.com
 * @since 1.0
 */
public final class ProtocEnumMarshaller<T extends ProtocolMessageEnum> implements RawProtobufMarshaller<T> {

   // this is a public static method present in all generated classes extending from ProtocolMessageEnum
   private static final String VALUE_OF_METHOF_NAME = "valueOf";

   // this is a public static method present in all generated classes extending from ProtocolMessageEnum
   private static final String GET_DESCRIPTOR_METHOD_NAME = "getDescriptor";

   private final String typeName;

   private final Class<? extends T> clazz;

   private final Method valueOfMethod;

   @SuppressWarnings("unchecked")
   public ProtocEnumMarshaller(Class<? extends T> clazz) {
      try {
         valueOfMethod = clazz.getDeclaredMethod(VALUE_OF_METHOF_NAME, int.class);
      } catch (NoSuchMethodException e) {
         throw new IllegalArgumentException("Class " + clazz + " does not appear to be a 'protoc' generated enum class (missing 'valueOf' method).");
      }

      try {
         Method getDescriptorMethod = clazz.getDeclaredMethod(GET_DESCRIPTOR_METHOD_NAME);
         Descriptors.Descriptor descriptor = (Descriptors.Descriptor) getDescriptorMethod.invoke(null);
         typeName = descriptor.getFullName();
      } catch (NoSuchMethodException e) {
         throw new IllegalArgumentException("Class " + clazz + " does not appear to be a 'protoc' generated class (missing 'getDescriptor' method).");
      } catch (IllegalAccessException e) {
         throw new IllegalArgumentException("Class " + clazz + " does not appear to be a 'protoc' generated class (missing 'getDescriptor' method).");
      } catch (InvocationTargetException e) {
         throw new IllegalArgumentException("Class " + clazz + " does not appear to be a 'protoc' generated class (missing 'getDescriptor' method).");
      }

      this.clazz = clazz;
   }

   @Override
   public Class<? extends T> getJavaClass() {
      return clazz;
   }

   @Override
   public String getTypeName() {
      return typeName;
   }

   @Override
   public T readFrom(SerializationContext ctx, CodedInputStream in) throws IOException {
      int enumValue = in.readEnum();
      try {
         // ProtocolMessageEnum implementations correctly returns null if the enum value is unknown
         return (T) valueOfMethod.invoke(null, enumValue);
      } catch (IllegalAccessException e) {
         throw new IOException(e);
      } catch (InvocationTargetException e) {
         throw new IOException(e);
      }
   }

   @Override
   public void writeTo(SerializationContext ctx, CodedOutputStream out, T o) throws IOException {
      out.writeEnumNoTag(o.getNumber());
   }
}
